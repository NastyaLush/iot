version: "3.9"
services:
#  sensors:
#    image: sensors:0.0.1-SNAPSHOT
#    ports:
#      - "8083:8083"
#  servermodule:
#    image: servermodule:0.0.1-SNAPSHOT
#    ports:
#      - "8082:8082"
#    depends_on:
#      - postgres
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/testdb
#      - SPRING_DATASOURCE_USERNAME=user
#      - SPRING_DATASOURCE_PASSWORD=password
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop


  postgres:
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "testdb"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      #      - ../2. Init Database:/docker-entrypoint-initdb.d
      - vkdb-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  prometheus:
    image: prom/prometheus
    volumes:
      - ./serverModule/src/main/resources/:/etc/prometheus/
    #      - prometheus_data:/prometheus_iot
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9091:9090
    restart: always
    networks:
      monitoring:
        aliases:
          - prometheus
  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    #    volumes:
    #      - grafana_data:/var/lib/grafana_iot
    restart: always
    networks:
      monitoring:
        aliases:
          - grafana

volumes:
  vkdb-data: { }
  prometheus_data: { }
#  grafana_data: { }
networks:
  monitoring:
